<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Window Style -->
    <Style x:Key="WindowStyle" TargetType="Window">
        <Setter Property="Foreground" Value="#D3D3D3"></Setter>
        <Setter Property="Background" Value="#252525"></Setter>
    </Style>

    <!-- Element Style -->
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="#D3D3D3"></Setter>
    </Style>
    
    <Style TargetType="TextBox">
        <Setter Property="Foreground" Value="#D3D3D3"/>
        <Setter Property="Background" Value="#343434"/>
        <Setter Property="BorderBrush" Value="#606060"/>
    </Style>

    <Style TargetType="PasswordBox">
        <Setter Property="Foreground" Value="#D3D3D3"/>
        <Setter Property="Background" Value="#343434"/>
        <Setter Property="BorderBrush" Value="#606060"/>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Background" Value="#323232"/>
        <Setter Property="BorderBrush" Value="#2D2D2D"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Triggers -->
        <Style.Triggers>
            <!-- Hover Background Trigger -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#444444"/>
            </Trigger>
            <!-- Disabled -->
            <DataTrigger Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Background" Value="#292929"/>
                <Setter Property="Foreground" Value="#737373"></Setter>
                <Setter Property="BorderBrush" Value="#2D2D2D"/>
            </DataTrigger>

        </Style.Triggers>
    </Style>

    <!-- Named Styles -->
    <Style x:Key="StdTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#D3D3D3"/>
    </Style>
    
    <Style x:Key="ErrorTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="Red"/>
    </Style>

    <Style x:Key="GrayedOutTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="DimGray"/>
    </Style>

    <Style x:Key="LoginButton" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#D3D3D3"/>
    </Style>

    <Style x:Key="DisconnectButton" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#d17171"/>
    </Style>

    <Style x:Key="RedNoticeText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#d17171"/>
    </Style>

    <Style x:Key="GreenNoticeText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#71d171"/>
    </Style>

    <Style x:Key="GradeCategoryTitle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#9fa1ed"/>
    </Style>

    <Style x:Key="GradeDeadlineText" TargetType="TextBlock">
        <Setter Property="Foreground" Value="#b4c2ae"/>
    </Style>

    <!-- Scroll Bars (https://stackoverflow.com/questions/37095415/wpf-scrollbar-styles) -->
    <SolidColorBrush x:Key="EslScrollbarThumb" Color="#8b8b8b" />

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"></Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        CornerRadius="3"
                        Background="{TemplateBinding Background}"
                        BorderThickness="0"
                        Width="6" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbHor" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        CornerRadius="3"
                        Background="{TemplateBinding Background}"
                        BorderThickness="0"
                        Height="6" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Track
            Name="PART_Track"
            IsDirectionReversed="true">
            <Track.DecreaseRepeatButton>
                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
            </Track.DecreaseRepeatButton>
            <Track.Thumb>
                <Thumb
                    Style="{StaticResource ScrollBarThumb}"
                    Margin="2,0,2,0"
                    Background="{DynamicResource EslScrollbarThumb}" />
            </Track.Thumb>
            <Track.IncreaseRepeatButton>
                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
            </Track.IncreaseRepeatButton>
        </Track>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Track
            Name="PART_Track"
            IsDirectionReversed="False">
            <Track.DecreaseRepeatButton>
                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
            </Track.DecreaseRepeatButton>
            <Track.Thumb>
                <Thumb
                    Style="{StaticResource ScrollBarThumbHor}"
                    Margin="0,2,0,2"
                    Background="{DynamicResource EslScrollbarThumb}" />
            </Track.Thumb>
            <Track.IncreaseRepeatButton>
                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
            </Track.IncreaseRepeatButton>
        </Track>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="10" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="10" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="1" />
                        <ScrollBar
                            Grid.Row="0"
                            Grid.Column="0"
                            Name="PART_VerticalScrollBar"
                            Value="{TemplateBinding VerticalOffset}"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                        <ScrollBar
                            Name="PART_HorizontalScrollBar"
                            Orientation="Horizontal"
                            Grid.Row="1"
                            Grid.Column="1"
                            Value="{TemplateBinding HorizontalOffset}"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0" />
                        <ScrollBar
                            x:Name="PART_VerticalScrollBar"
                            Grid.Row="0"
                            Grid.Column="1"
                            Value="{TemplateBinding VerticalOffset}"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                        <ScrollBar
                            x:Name="PART_HorizontalScrollBar"
                            Orientation="Horizontal"
                            Grid.Row="1"
                            Grid.Column="0"
                            Value="{TemplateBinding HorizontalOffset}"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlayButton" TargetType="Canvas">
        <Setter Property="Opacity" Value="0.6"/>

        <!-- Triggers -->
        <Style.Triggers>
            <!-- Hover Background Trigger -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1"/>
            </Trigger>

        </Style.Triggers>
    </Style>

</ResourceDictionary>